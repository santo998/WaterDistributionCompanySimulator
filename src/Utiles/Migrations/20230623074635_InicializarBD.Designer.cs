// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Utiles;

#nullable disable

namespace Utiles.Migrations
{
    [DbContext(typeof(DistribuidosObligatorioContext))]
    [Migration("20230623074635_InicializarBD")]
    partial class InicializarBD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Utiles.Modelos.Medicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Analizada")
                        .HasColumnType("bit");

                    b.Property<double>("Caudal")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaUTC")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNodo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNodo");

                    b.ToTable("Medicion", (string)null);
                });

            modelBuilder.Entity("Utiles.Modelos.Nodo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("CaudalEsperado")
                        .HasColumnType("float");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ToleranciaCaudal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdPadre");

                    b.ToTable("Nodo", (string)null);
                });

            modelBuilder.Entity("Utiles.Modelos.Perdida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("FueNotificada")
                        .HasColumnType("bit");

                    b.Property<int>("IdMedicion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMedicion");

                    b.ToTable("Perdida", (string)null);
                });

            modelBuilder.Entity("Utiles.Modelos.Suscripcion", b =>
                {
                    b.Property<string>("ChatId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ChatId");

                    b.ToTable("Suscripcion", (string)null);
                });

            modelBuilder.Entity("Utiles.Modelos.Medicion", b =>
                {
                    b.HasOne("Utiles.Modelos.Nodo", "Nodo")
                        .WithMany("Mediciones")
                        .HasForeignKey("IdNodo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nodo");
                });

            modelBuilder.Entity("Utiles.Modelos.Nodo", b =>
                {
                    b.HasOne("Utiles.Modelos.Nodo", "Padre")
                        .WithMany("Hijos")
                        .HasForeignKey("IdPadre");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("Utiles.Modelos.Perdida", b =>
                {
                    b.HasOne("Utiles.Modelos.Medicion", "Medicion")
                        .WithMany()
                        .HasForeignKey("IdMedicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicion");
                });

            modelBuilder.Entity("Utiles.Modelos.Nodo", b =>
                {
                    b.Navigation("Hijos");

                    b.Navigation("Mediciones");
                });
#pragma warning restore 612, 618
        }
    }
}
